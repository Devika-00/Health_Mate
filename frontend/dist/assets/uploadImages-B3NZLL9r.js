import{w as t,x as e}from"./index-DvlxLBRP.js";import{s as n}from"./toaster-HDMX5aEB.js";const u=async o=>{try{if(!o)throw new Error("Image file not provided");const r=new FormData;r.append("file",o),r.append("upload_preset",t);const a=await fetch(e,{method:"POST",body:r});if(!a.ok)throw new Error("Failed to upload image to Cloudinary");return(await a.json()).secure_url}catch(r){return n("Error uploading image to Cloudinary: "+r,"error"),null}},l=async o=>{try{if(!o)throw new Error("Certificate file not provided");const r=new FormData;r.append("file",o),r.append("upload_preset",t);const a=await fetch(e,{method:"POST",body:r});if(!a.ok)throw new Error("Failed to upload certificate to Cloudinary");return(await a.json()).secure_url}catch(r){return n("Error uploading certificate to Cloudinary: "+r,"error"),null}},p=async o=>{try{if(!o)throw new Error("Document file not provided");const r=new FormData;r.append("file",o),r.append("upload_preset",t);const a=await fetch(e,{method:"POST",body:r});if(!a.ok)throw new Error("Failed to upload document to Cloudinary");return(await a.json()).secure_url}catch(r){return n("Error uploading document to Cloudinary: "+r,"error"),null}};export{u as a,p as b,l as u};
